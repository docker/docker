#
# THIS FILE IS AUTOGENERATED; SEE "contrib/builder/dockerfiles/generate.sh"!
#
# This file describes the standard way to build Docker, using docker
# for arm.
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker -f Dockerfile.arm .
#



FROM ioft/armhf-ubuntu:14.04

RUN apt-get update && apt-get install -y apparmor aufs-tools btrfs-tools build-essential curl ca-certificates git iptables jq net-tools libapparmor-dev libcap-dev libsqlite3-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*

# Get lvm2 source for compiling statically
RUN git clone -b v2_02_103 https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2
# see https://git.fedorahosted.org/cgit/lvm2.git/refs/tags for release tags

# Compile and install lvm2
RUN cd /usr/local/lvm2 \
&& ./configure --enable-static_link \
&& make device-mapper \
&& make install_device-mapper
# see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL

ENV GOPATH /go:/go/src/github.com/docker/docker/vendor
ENV GO_VERSION 1.5.1
RUN curl -fSL "https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin
ENV IMAGEREPO hypriot
COPY contrib/download-frozen-image-v1.sh /go/src/github.com/docker/docker/contrib/
RUN ./contrib/download-frozen-image-v1.sh /docker-frozen-images \
$IMAGEREPO/busybox@ea0800bb83571c585c5652b53668e76b29c7c0eef719892f9d0a48607984f9e1 \
$IMAGEREPO/armhf-hello-world@508c59a4f8b23c77bbcf43296c3f580873dc7eecb1f0d680cea3067e221fd4c2 \
$IMAGEREPO/armhf-unshare@3f1db65f8bbabc743fd739cf7145a56c35b2a0979ae3174e9d79b7fa4b00fca1
usybox:latest \

ENV DOCKER_BUILDTAGS apparmor selinux
# Add an unprivileged user to be used for tests which need it
RUN groupadd -r docker
RUN useradd --create-home --gid docker unprivilegeduser

WORKDIR /go/src/github.com/docker/docker
ENV DOCKER_BUILDTAGS apparmor selinux

# Wrap all commands in the "docker-in-docker" script to allow nested containers
ENTRYPOINT ["hack/dind"]

# Upload docker source
COPY . /go/src/github.com/docker/docker
