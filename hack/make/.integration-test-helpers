#!/bin/bash

: ${TEST_REPEAT:=0}

bundle_test_integration_cli() {
	TESTFLAGS="$TESTFLAGS -check.v -check.timeout=${TIMEOUT} -test.timeout=360m"
	go_test_dir ./integration-cli
}

# If $TESTFLAGS is set in the environment, it is passed as extra arguments to 'go test'.
# You can use this to select certain tests to run, eg.
#
#     TESTFLAGS='-test.run ^TestBuild$' ./hack/make.sh test-unit
#
# For integration-cli test, we use [gocheck](https://labix.org/gocheck), if you want
# to run certain tests on your local host, you should run with command:
#
#     TESTFLAGS='-check.f DockerSuite.TestBuild*' ./hack/make.sh binary test-integration-cli
#
go_test_dir() {
	dir=$1
	coverpkg=$2
	testcover=()
	testcoverprofile=()
	testbinary="$ABS_DEST/integration.test"

    # TODO: remove
    PROFILE_TEST_SUITE=1

    if [ "$PROFILE_TEST_SUITE" ]; then
        cpuprof="$ABS_DEST/cpu.prof"
        blockprof="$ABS_DEST/block.prof"
        echo "Test profiles in $cpuprof $blockprof"
        PROFRUNFLAGS="-test.cpuprofile $cpuprof -test.blockprofile $blockprof"
        PROFCOMPILEFLAGS="-cpuprofile $cpuprof -blockprofile $blockprof"
    fi

	(
		mkdir -p "$DEST/coverprofiles"
		cd "$dir"
		export DEST="$ABS_DEST"
        set -x
		go test -c -o "$testbinary" $PROFCOMPILEFLAGS -ldflags "$LDFLAGS" "${BUILDFLAGS[@]}"
        set +x
		i=0
		while ((++i)); do
			test_env "$testbinary" $PROFRUNFLAGS $TESTFLAGS
			if [ $i -gt "$TEST_REPEAT" ]; then
				break
			fi
			echo "Repeating test ($i)"
		done
	)
}

test_env() {
	# use "env -i" to tightly control the environment variables that bleed into the tests
	env -i \
		DEST="$DEST" \
		DOCKER_TLS_VERIFY="$DOCKER_TEST_TLS_VERIFY" \
		DOCKER_CERT_PATH="$DOCKER_TEST_CERT_PATH" \
		DOCKER_ENGINE_GOARCH="$DOCKER_ENGINE_GOARCH" \
		DOCKER_GRAPHDRIVER="$DOCKER_GRAPHDRIVER" \
		DOCKER_USERLANDPROXY="$DOCKER_USERLANDPROXY" \
		DOCKER_HOST="$DOCKER_HOST" \
		DOCKER_REMAP_ROOT="$DOCKER_REMAP_ROOT" \
		DOCKER_REMOTE_DAEMON="$DOCKER_REMOTE_DAEMON" \
		GOPATH="$GOPATH" \
		GOTRACEBACK=all \
		HOME="$ABS_DEST/fake-HOME" \
		PATH="$PATH" \
		TEMP="$TEMP" \
		"$@"
}
